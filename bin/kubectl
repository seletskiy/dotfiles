#!/bin/zsh

:main() {
    local arg
    local context
    local args=()
    local entity

    for (( i = 1; i <= $#; i ++ )); do
        arg=${@:$i:1}

        if [[ "$arg" =~ ^--context ]]; then
            context=${arg:9}

            if [[ ! "$context" ]]; then
                (( i++ ))
                context=${@:$i:1}
            fi

            continue
        fi

        if [[ "$arg" =~ ^-n ]]; then
            namespace=${arg:2}

            if [[ ! "$namespace" ]]; then
                (( i++ ))
                namespace=${@:$i:1}
            fi

            continue
        fi

        if [[ "$arg" =~ ^--namespace ]]; then
            namespace=${arg:12}

            if [[ ! "$namespace" ]]; then
                (( i++ ))
                namespace=${@:$i:1}
            fi

            continue
        fi

        if [[ "$arg" =~ :.* ]]; then
            namespace=$(
                :kubectl get namespaces --no-headers -o name \
                    | grep -F "${arg:1}" \
                    | cut -f2 -d/
            )

            continue
        fi

        if [[ "$arg" =~ @.* ]]; then
            context=$(
                :kubectl config get-contexts --no-headers -o name \
                    | grep -F "${arg:1}"
            )

            continue
        fi

        args+=("$arg")
    done

    set -- "${args[@]}"

    args=()
    targets=()

    for arg in "$@"; do
        if [[ "$arg" =~ %.* ]]; then
            entity=${arg%/*}

            if [[ "$entity" == "$arg" ]]; then
                entity=pod
            fi

            entities=$(
                :kubectl \
                    ${namespace:+--namespace=$namespace} \
                    --context=$context get "$entity" --no-headers \
                        | awk '$3 != "Terminating" { print $1 }' \
                        | cut -f2- -d/ \
                        | grep "^${${arg:1}#*/}"
            )

            if [[ ! "$entities" ]]; then
                printf ":: no matching entities found for '%s'\n" "$arg"
                return 1
            fi

            args+=($entities)
        else
            args+=("$arg")
        fi
    done

    if [[ ! "$context" ]]; then
        context=$(:kubectl config current-context)

        if [[ ! "$context" ]]; then
            printf ":: no matching context found\n"
            return 1
        fi

        printf ":: using context %s\n" "$context"
    fi

    :kubectl --context=$context \
        ${namespace:+--namespace=$namespace} \
        "${args[@]}"
}

:kubectl() {
    /usr/bin/kubectl "$@"
}

:main "$@"
